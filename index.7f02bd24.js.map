{"mappings":"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","sources":["src/data/data-tyres-width.js","src/js/markup-tyres-width.js","src/data/data-tyres-height.js","src/js/markup-tyres-height.js","src/data/data-tyres-diameter.js","src/js/markup-tyres-diameter.js","src/data/data-disks-width.js","src/js/markup-disks-width.js","src/data/data-disks-et.js","node_modules/nanoid/index.browser.js","src/js/markup-disks-et.js","src/js/disks-size-switch.js","src/js/tyres-counter.js"],"sourcesContent":["const tyresWidth = [\n    {\n        id: 1,\n        width: 145\n    },\n    {\n        id: 2,\n        width: 155\n    },\n    {\n        id: 3,\n        width: 165\n    },\n    {\n        id: 4,\n        width: 175\n    },\n    {\n        id: 5,\n        width: 185\n    },\n    {\n        id: 6,\n        width: 195\n    },\n    {\n        id: 7,\n        width: 205\n    },\n    {\n        id: 8,\n        width: 215\n    },\n    {\n        id: 9,\n        width: 225\n    },\n    {\n        id: 10,\n        width: 235\n    },\n    {\n        id: 11,\n        width: 245\n    },\n    {\n        id: 12,\n        width: 255\n    },\n    {\n        id: 13,\n        width: 265\n    },\n    {\n        id: 14,\n        width: 275\n    },\n    {\n        id: 15,\n        width: 285\n    },\n    {\n        id: 16,\n        width: 295\n    },\n    {\n        id: 17,\n        width: 305\n    },\n    {\n        id: 18,\n        width: 315\n    },\n    {\n        id: 19,\n        width: 325\n    },\n    {\n        id: 20,\n        width: 335\n    },\n    {\n        id: 21,\n        width: 345\n    },\n    {\n        id: 22,\n        width: 355\n    },\n    {\n        id: 23,\n        width: 365\n    }\n];\n\nexport default tyresWidth;","import tyresWidth from '../data/data-tyres-width';\n\nconst leftTyresWidth = document.getElementById(\"lefttyreswidth\");\nconst rightTyresWidth = document.getElementById(\"righttyreswidth\");\n\nconst tyresWidthMarkup = makeTyresWidthMarkup(tyresWidth);\n\nleftTyresWidth.innerHTML = tyresWidthMarkup;\nrightTyresWidth.innerHTML = tyresWidthMarkup;\n\nfunction makeTyresWidthMarkup(tyresWidth) {\n\n    const markupString = tyresWidth.map(\n        item => \n        `        <option \n        key=${item.id} \n        value=${item.width}>\n        ${item.width}\n        </option>        `\n    ).join(\"\");\n    return markupString;\n};\n","const tyresHeight = [\n    {\n        id:1,\n        height: 25\n    },\n    {\n        id:2,\n        height: 30\n    },    \n    {\n        id:3,\n        height: 35\n    },    \n    {\n        id:4,\n        height: 40\n    },    \n    {\n        id:5,\n        height: 45\n    },    \n    {\n        id:6,\n        height: 50\n    },    \n    {\n        id:7,\n        height: 55\n    },    \n    {\n        id:8,\n        height: 60\n    },    \n    {\n        id:9,\n        height: 65\n    },    \n    {\n        id:10,\n        height: 70\n    },    \n    {\n        id:11,\n        height: 75\n    },\n    {\n        id:12,\n        height: 80\n    },\n    {\n        id:13,\n        height: 85\n    },\n    {\n        id:14,\n        height: 90\n    }\n];\n\nexport default tyresHeight;","import tyresHeight from '../data/data-tyres-height';\n\nconst leftTyresHeight = document.getElementById(\"lefttyresheight\");\nconst rightTyresHeight = document.getElementById(\"righttyresheight\");\n\nconst tyresHeightMarkup = makeTyresHeightMarkup(tyresHeight);\n\nleftTyresHeight.innerHTML = tyresHeightMarkup;\nrightTyresHeight.innerHTML = tyresHeightMarkup;\n\nfunction makeTyresHeightMarkup(tyresHeight) {\n    const markupString = tyresHeight.map(\n        item => \n        `        <option \n        key=${item.id} \n        value=${item.height}>\n        ${item.height}\n        </option>        `\n    ).join(\"\");\n    return markupString;\n};\n","const tyresDiameter = [\n    {\n        id:1,\n        diameter: 12\n    },\n    {\n        id:2,\n        diameter: 13\n    },    \n    {\n        id:3,\n        diameter: 14\n    },    \n    {\n        id:4,\n        diameter: 15\n    },    \n    {\n        id:5,\n        diameter: 16\n    },    \n    {\n        id:6,\n        diameter: 17\n    },    \n    {\n        id:7,\n        diameter: 18\n    },    \n    {\n        id:8,\n        diameter: 19\n    },    \n    {\n        id:9,\n        diameter: 20\n    },    \n    {\n        id:10,\n        diameter: 21\n    },    \n    {\n        id:11,\n        diameter: 22\n    },\n    {\n        id:12,\n        diameter: 23\n    },\n    {\n        id:13,\n        diameter: 24\n    }\n];\n\nexport default tyresDiameter;","import tyresDiameter from '../data/data-tyres-diameter';\n\nconst leftTyresDiameter = document.getElementById(\"lefttyresdiameter\");\nconst rightTyresDiameter = document.getElementById(\"righttyresdiameter\");\nconst leftDisksDiameter = document.getElementById(\"leftdisksdiameter\");\nconst rightDisksDiameter = document.getElementById(\"rightdisksdiameter\");\n\n\nconst tyresDiameterMarkup = makeTyresDiameterMarkup(tyresDiameter);\n\nleftTyresDiameter.innerHTML = tyresDiameterMarkup;\nrightTyresDiameter.innerHTML = tyresDiameterMarkup;\nleftDisksDiameter.innerHTML = tyresDiameterMarkup;\nrightDisksDiameter.innerHTML = tyresDiameterMarkup;\n\n\nfunction makeTyresDiameterMarkup(tyresDiameter) {\n    const markupString = tyresDiameter.map(\n        item => \n        `        <option \n        key=${item.id} \n        value=${item.diameter}>\n        ${item.diameter}\n        </option>        `\n    ).join(\"\");\n    return markupString;\n};\n","const disksWidth = [\n    {\n        id:1,\n        width: 3.5\n    },\n    {\n        id:2,\n        width: 4\n    },\n    {\n        id:3,\n        width: 4.5\n    },\n    {\n        id:4,\n        width: 5\n    },\n    {\n        id:5,\n        width: 5.5\n    },\n    {\n        id:6,\n        width: 6\n    },\n    {\n        id:7,\n        width: 6.5\n    },\n    {\n        id:8,\n        width: 7\n    },\n    {\n        id:9,\n        width: 7.5\n    },\n    {\n        id:10,\n        width: 8\n    },\n    {\n        id:11,\n        width: 8.5\n    },\n    {\n        id:12,\n        width: 9\n    },\n    {\n        id:13,\n        width: 9.5\n    },\n    {\n        id:14,\n        width: 10\n    },\n    {\n        id:15,\n        width: 10.5\n    },\n    {\n        id:16,\n        width: 11\n    },\n    {\n        id:17,\n        width: 11.5\n    },\n    {\n        id:18,\n        width: 12\n    },\n    {\n        id:19,\n        width: 12.5\n    },    \n    {\n        id:20,\n        width: 13\n    }\n];\n\nexport default disksWidth;","import disksWidth from '../data/data-disks-width';\n\nconst leftDisksWidth = document.getElementById(\"leftdiskswidth\");\nconst rightDisksWidth = document.getElementById(\"rightdiskswidth\");\n\nconst disksWidthMarkup = makeDisksWidthMarkup(disksWidth);\n\nleftDisksWidth.innerHTML = disksWidthMarkup;\nrightDisksWidth.innerHTML = disksWidthMarkup;\n\nfunction makeDisksWidthMarkup(disksWidth) {\n    const markupString = disksWidth.map(\n        item => \n        `<option \n        key=${item.id} \n        value=${item.width}>\n        ${item.width}\n        </option>`\n    ).join(\"\");\n    return markupString;\n};","import { nanoid } from 'nanoid'\n\nconst disksEt = [];\n\nfor (let i = 150; i >= -150; i -= 0.5) {\n    disksEt.push({\n        id: nanoid(),\n        et: i,\n    })\n};\n\n// console.log(disksEt);\n\nexport default disksEt;","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","import disksEt from \"../data/data-disks-et\";\n\nconst leftDisksET = document.getElementById(\"leftdiskset\");\nconst rightDisksET = document.getElementById(\"rightdiskset\");\n\nconst disksEtMarkup = makeDisksEtMarkup(disksEt);\n\nleftDisksET.innerHTML = disksEtMarkup;\nrightDisksET.innerHTML = disksEtMarkup;\n\nfunction makeDisksEtMarkup(disksEt) {\n    const markupString = disksEt.map(\n        item =>\n        `<option \n        key=${item.id} \n        value=${item.et}>\n        ${item.et}\n        </option>`\n    ).join(\"\");\n    return markupString;\n};","const disksSwicthCheckBox = document.getElementById(\"disksswitch\");\n\ndisksSwicthCheckBox.addEventListener(\"input\", switchDisksSelect)\n\nfunction switchDisksSelect(event) {\n    // console.log(event);\n\n    const leftDisksDiameterSelect = document.getElementById(\"leftdisksdiameter\");\n    const rightDisksDiameterSelect = document.getElementById(\"rightdisksdiameter\");\n    const leftDisksWidthSelect = document.getElementById(\"leftdiskswidth\");\n    const rightDisksWidthSelect = document.getElementById(\"rightdiskswidth\");\n    const leftDisksETSelect = document.getElementById(\"leftdiskset\");\n    const rightDisksETSelect = document.getElementById(\"rightdiskset\");\n    const form = document.getElementById(\"tyresform\");\n\n    if (\n        leftDisksDiameterSelect.disabled === true &&\n        rightDisksDiameterSelect.disabled === true &&\n        leftDisksWidthSelect.disabled === true &&\n        rightDisksWidthSelect.disabled === true &&\n        leftDisksETSelect.disabled === true &&\n        rightDisksETSelect.disabled === true\n    ) {\n        leftDisksDiameterSelect.disabled = false;\n        rightDisksDiameterSelect.disabled = false;\n        leftDisksWidthSelect.disabled = false;\n        rightDisksWidthSelect.disabled = false;\n        leftDisksETSelect.disabled = false;\n        rightDisksETSelect.disabled = false;\n        form.classList.remove(\"without__disks\");\n        form.classList.add(\"with__disks\");\n        \n    } else {\n        leftDisksDiameterSelect.disabled = true;\n        rightDisksDiameterSelect.disabled = true;\n        leftDisksWidthSelect.disabled = true;\n        rightDisksWidthSelect.disabled = true;\n        leftDisksETSelect.disabled = true;\n        rightDisksETSelect.disabled = true;  \n        form.classList.remove(\"with__disks\");\n        form.classList.add(\"without__disks\");\n    }\n\n\n}\n\nexport default switchDisksSelect;","const tyresForm = document.getElementById(\"tyresform\");\n\n\ntyresForm.addEventListener('change', onFormChange);\n\nfunction onFormChange(event) {\n    event.preventDefault;\n    // console.log(\"ka-chink!!\");\n    // console.log(event.target);\n\n    \n    // input selectors\n    const leftTyresWidth = document.getElementById(\"lefttyreswidth\").value;\n    const rightTyresWidth = document.getElementById(\"righttyreswidth\").value;\n    const leftTyresHeight = document.getElementById(\"lefttyresheight\").value;\n    const rightTyresHeight = document.getElementById(\"righttyresheight\").value;\n    const leftTyresDiameter = document.getElementById(\"lefttyresdiameter\").value;\n    const rightTyresDiameter = document.getElementById(\"righttyresdiameter\").value;\n    const leftDisksDiameter = document.getElementById(\"leftdisksdiameter\").value;\n    const rightDisksDiameter = document.getElementById(\"rightdisksdiameter\").value;\n    const leftTyresDiameterSelect = document.getElementById(\"lefttyresdiameter\");\n    const rightTyresDiameterSelect = document.getElementById(\"righttyresdiameter\");\n    const leftDisksDiameterSelect = document.getElementById(\"leftdisksdiameter\");\n    const rightDisksDiameterSelect = document.getElementById(\"rightdisksdiameter\");\n    const leftDisksWidth = document.getElementById(\"leftdiskswidth\").value;\n    const rightDisksWidth = document.getElementById(\"rightdiskswidth\").value;\n    const leftDisksET = document.getElementById(\"leftdiskset\").value;\n    const rightDisksET = document.getElementById(\"rightdiskset\").value;\n\n    const disksSwicthCheckBox = document.getElementById(\"disksswitch\");\n\n\n    // table cells selectors\n\n    const oldTyresWidthCell = document.getElementById(\"oldtyreswidth\");\n    const newTYresWidthCell = document.getElementById(\"newtyreswidth\");\n    const oldTyresHeightCell = document.getElementById(\"oldtyresheight\");\n    const newTyresHeightCell = document.getElementById(\"newtyresheight\");\n    const leftTyresDiameterCell = document.getElementById(\"oldtyresdiameter\");\n    const rightTyresDiameterCell = document.getElementById(\"newdtyresiameter\");\n\n    const oldDisksWidthCell = document.getElementById(\"olddiskswidth\");\n    const newDisksWidthCell = document.getElementById(\"newddiskswidth\");\n    const oldWheelsETCell = document.getElementById(\"oldwheelset\");\n    const newWheelsETCell = document.getElementById(\"newdwheelset\");\n\n    // difference selectors\n    const tyresWidthDifferenceCell = document.getElementById(\"tyreswidthdifference\");\n    const tyresHeightDifferenceCell = document.getElementById(\"tyresheightdifference\");\n    const tyresDiameterDifferenceCell = document.getElementById(\"tyresdiameterdifference\");\n\n    const disksDifferenceCell = document.getElementById(\"disksdifference\");\n\n    if (event.target === disksSwicthCheckBox) {\n        return;\n    } else if (event.target === leftTyresDiameterSelect) {\n        leftDisksDiameterSelect.value = leftTyresDiameter;\n    } else if (event.target === rightTyresDiameterSelect) {\n        rightDisksDiameterSelect.value = rightTyresDiameter;\n    } else if (event.target === leftDisksDiameterSelect) {\n        leftTyresDiameterSelect.value = leftDisksDiameter\n    } else if (event.target === rightDisksDiameterSelect) {\n        rightTyresDiameterSelect.value = rightDisksDiameter\n    };\n\n    oldTyresWidthCell.innerText = leftTyresWidth;\n    newTYresWidthCell.innerText = rightTyresWidth;\n    oldTyresHeightCell.innerText = Number(leftTyresWidth) * Number(leftTyresHeight) / 100;\n    newTyresHeightCell.innerText = Number(rightTyresWidth) * Number(rightTyresHeight) / 100;\n    leftTyresDiameterCell.innerText = Number((Number(leftTyresWidth) * Number(leftTyresHeight) / 1000) * 2) + (Number(leftTyresDiameter * 2.5));\n    rightTyresDiameterCell.innerText = Number((Number(rightTyresWidth) * Number(rightTyresHeight) / 1000) * 2) + (Number(rightTyresDiameter * 2.5));\n\n    if (leftTyresWidth > rightTyresWidth) {\n        const tyresWidthDifference = Number(leftTyresWidth - rightTyresWidth);\n        tyresWidthDifferenceCell.innerText = `The new tire is narrower than the old one by ${tyresWidthDifference} mm`;\n    } else if (leftTyresWidth < rightTyresWidth) {\n        const tyresWidthDifference = Number(rightTyresWidth - leftTyresWidth);\n        tyresWidthDifferenceCell.innerText = `The new tire is wider than the old one by ${tyresWidthDifference} mm`;\n    } else if (leftTyresWidth === rightTyresWidth) {\n        tyresWidthDifferenceCell.innerText = 'Tire width is the same';    \n    };\n\n    const oldTyresProfile = Number(leftTyresWidth) * Number(leftTyresHeight) / 100;\n    const newTyresProfile = Number(rightTyresWidth) * Number(rightTyresHeight) / 100;\n\n    if (oldTyresProfile > newTyresProfile) {\n        const tyresProfileDifference = Number(oldTyresProfile - newTyresProfile);\n        tyresHeightDifferenceCell.innerText = `The profile height of the new tire is lower than the old one by ${tyresProfileDifference} mm`;\n    } else if (newTyresProfile > oldTyresProfile) {\n        const tyresProfileDifference = Number(newTyresProfile - oldTyresProfile);\n        tyresHeightDifferenceCell.innerText = `The profile height of the new tire is higher than the old one by ${tyresProfileDifference} mm`;\n    } else if (newTyresProfile === oldTyresProfile) {\n        tyresHeightDifferenceCell.innerText = 'The profile height is the same';\n    }\n\n    const oldWheelHeight = Number((Number(leftTyresWidth) * Number(leftTyresHeight) / 1000) * 2) + (Number(leftTyresDiameter * 2.5));\n    const newWheelHeight = Number((Number(rightTyresWidth) * Number(rightTyresHeight) / 1000) * 2) + (Number(rightTyresDiameter * 2.5));\n\n    if (oldWheelHeight > newWheelHeight) {\n        const wheelHeightDifference = Number(oldWheelHeight - newWheelHeight).toFixed(2);\n        tyresDiameterDifferenceCell.innerText = `New wheel will be lower than the old one by ${wheelHeightDifference} mm. The clearance of the car will decrease by ${Number(wheelHeightDifference / 2).toFixed(2)} mm.`;\n    } else if (newWheelHeight > oldWheelHeight) {\n        const wheelHeightDifference = Number(newWheelHeight - oldWheelHeight).toFixed(2);\n        tyresDiameterDifferenceCell.innerText = `New wheel will be higher than the old one by ${wheelHeightDifference} mm. The clearance of the car will increase by ${Number(wheelHeightDifference / 2).toFixed(2)} mm.`;\n    } else if (newWheelHeight === oldWheelHeight) {\n        tyresDiameterDifferenceCell.innerText = 'Wheel height is the same. The clearance of the car will not change';\n    }\n\n    if (disksSwicthCheckBox.checked === true) {\n        oldDisksWidthCell.innerText = Number(leftDisksWidth * 2.5);\n        newDisksWidthCell.innerText = Number(rightDisksWidth * 2.5);\n        oldWheelsETCell.innerText = leftDisksET;\n        newWheelsETCell.innerText = rightDisksET;\n\n        const oldWheelToBodyGap = Number(((leftDisksWidth * 2.5) / 2) - (Number(leftDisksET) / 10));\n        \n        const newWheelToBodyGap = Number(((rightDisksWidth * 2.5) / 2) - (Number(rightDisksET) / 10));\n\n        if (oldWheelToBodyGap > newWheelToBodyGap) {\n            const diff = Number(oldWheelToBodyGap - newWheelToBodyGap).toFixed(2);\n            const phraze = `The wheel is closer to the suspension and body elements by ${diff} cm`;\n            disksDifferenceCell.innerText = phraze;\n        } else if (oldWheelToBodyGap < newWheelToBodyGap) {\n            const diff = Number(newWheelToBodyGap - oldWheelToBodyGap).toFixed(2);\n            const phraze = `The wheel is further from the suspension and body elements by ${diff} cm`;\n            disksDifferenceCell.innerText = phraze;\n        } else {\n            const phraze = 'The gap between wheel and the suspension and body elements is the same';\n            disksDifferenceCell.innerText = phraze;\n        }\n\n    } else {\n        oldDisksWidthCell.innerText = \"\";\n        newDisksWidthCell.innerText = \"\";\n        oldWheelsETCell.innerText = \"\";\n        newWheelsETCell.innerText = \"\";\n        disksDifferenceCell.innerText = \"\";\n    }\n};"],"names":["$cefb58067b5e0be0$export$2e2bcd8739ae039","id","width","$dbd483d868f85f40$var$leftTyresWidth","document","getElementById","$dbd483d868f85f40$var$rightTyresWidth","$dbd483d868f85f40$var$tyresWidthMarkup","map","item","concat","join","innerHTML","$abff3de546d90fd3$export$2e2bcd8739ae039","height","$b8f4be6c6c9f7538$var$leftTyresHeight","$b8f4be6c6c9f7538$var$rightTyresHeight","$b8f4be6c6c9f7538$var$tyresHeightMarkup","$a4af5d4bbf4500f1$export$2e2bcd8739ae039","diameter","$ccf6648ab6ab8d4d$var$leftTyresDiameter","$ccf6648ab6ab8d4d$var$rightTyresDiameter","$ccf6648ab6ab8d4d$var$leftDisksDiameter","$ccf6648ab6ab8d4d$var$rightDisksDiameter","$ccf6648ab6ab8d4d$var$tyresDiameterMarkup","$6fc77aff7a3412e3$export$2e2bcd8739ae039","$74a0fc03f4f4e2fa$var$leftDisksWidth","$74a0fc03f4f4e2fa$var$rightDisksWidth","$74a0fc03f4f4e2fa$var$disksWidthMarkup","$8069ef7e6126e429$export$ac4959f4f1338dfc","size","arguments","length","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase","$f3206284ea3d1db4$var$disksEt","$f3206284ea3d1db4$var$i","push","et","$f3206284ea3d1db4$export$2e2bcd8739ae039","$56d22bc01bab6377$var$leftDisksET","$56d22bc01bab6377$var$rightDisksET","$56d22bc01bab6377$var$disksEtMarkup","$e64714c580bc2f9f$var$switchDisksSelect","event","leftDisksDiameterSelect","rightDisksDiameterSelect","leftDisksWidthSelect","rightDisksWidthSelect","leftDisksETSelect","rightDisksETSelect","form","disabled","classList","remove","add","addEventListener","preventDefault","leftTyresWidth","value","rightTyresWidth","leftTyresHeight","rightTyresHeight","leftTyresDiameter","rightTyresDiameter","leftDisksDiameter","rightDisksDiameter","leftTyresDiameterSelect","rightTyresDiameterSelect","leftDisksWidth","rightDisksWidth","leftDisksET","rightDisksET","disksSwicthCheckBox","oldTyresWidthCell","newTYresWidthCell","oldTyresHeightCell","newTyresHeightCell","leftTyresDiameterCell","rightTyresDiameterCell","oldDisksWidthCell","newDisksWidthCell","oldWheelsETCell","newWheelsETCell","tyresWidthDifferenceCell","tyresHeightDifferenceCell","tyresDiameterDifferenceCell","disksDifferenceCell","target","innerText","Number","tyresWidthDifference","tyresWidthDifference1","oldTyresProfile","newTyresProfile","tyresProfileDifference","tyresProfileDifference1","oldWheelHeight","newWheelHeight","wheelHeightDifference","toFixed","wheelHeightDifference1","checked","oldWheelToBodyGap","newWheelToBodyGap","diff","phraze","diff1","phraze1"],"version":3,"file":"index.7f02bd24.js.map"}