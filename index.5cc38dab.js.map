{"mappings":"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","sources":["src/data/data-tyres-width.js","src/js/markup-tyres-width.js","src/data/data-tyres-height.js","src/js/markup-tyres-height.js","src/data/data-tyres-diameter.js","src/js/markup-tyres-diameter.js","src/data/data-disks-width.js","src/js/markup-disks-width.js","node_modules/nanoid/index.browser.js","src/data/data-disks-et.js","src/js/markup-disks-et.js","src/js/disks-size-switch.js","src/js/tyres-counter.js"],"sourcesContent":["const tyresWidth = [\n    {\n        id: 1,\n        width: 145\n    },\n    {\n        id: 2,\n        width: 155\n    },\n    {\n        id: 3,\n        width: 165\n    },\n    {\n        id: 4,\n        width: 175\n    },\n    {\n        id: 5,\n        width: 185\n    },\n    {\n        id: 6,\n        width: 195\n    },\n    {\n        id: 7,\n        width: 205\n    },\n    {\n        id: 8,\n        width: 215\n    },\n    {\n        id: 9,\n        width: 225\n    },\n    {\n        id: 10,\n        width: 235\n    },\n    {\n        id: 11,\n        width: 245\n    },\n    {\n        id: 12,\n        width: 255\n    },\n    {\n        id: 13,\n        width: 265\n    },\n    {\n        id: 14,\n        width: 275\n    },\n    {\n        id: 15,\n        width: 285\n    },\n    {\n        id: 16,\n        width: 295\n    },\n    {\n        id: 17,\n        width: 305\n    },\n    {\n        id: 18,\n        width: 315\n    },\n    {\n        id: 19,\n        width: 325\n    },\n    {\n        id: 20,\n        width: 335\n    },\n    {\n        id: 21,\n        width: 345\n    },\n    {\n        id: 22,\n        width: 355\n    },\n    {\n        id: 23,\n        width: 365\n    }\n];\n\nexport default tyresWidth;","import tyresWidth from '../data/data-tyres-width';\n\nconst leftTyresWidth = document.getElementById(\"lefttyreswidth\");\nconst rightTyresWidth = document.getElementById(\"righttyreswidth\");\n\nconst tyresWidthMarkup = makeTyresWidthMarkup(tyresWidth);\n\nleftTyresWidth.innerHTML = tyresWidthMarkup;\nrightTyresWidth.innerHTML = tyresWidthMarkup;\n\nfunction makeTyresWidthMarkup(tyresWidth) {\n\n    const markupString = tyresWidth.map(\n        item => \n        `        <option \n        key=${item.id} \n        value=${item.width}>\n        ${item.width}\n        </option>        `\n    ).join(\"\");\n    return markupString;\n};\n","const tyresHeight = [\n    {\n        id:1,\n        height: 25\n    },\n    {\n        id:2,\n        height: 30\n    },    \n    {\n        id:3,\n        height: 35\n    },    \n    {\n        id:4,\n        height: 40\n    },    \n    {\n        id:5,\n        height: 45\n    },    \n    {\n        id:6,\n        height: 50\n    },    \n    {\n        id:7,\n        height: 55\n    },    \n    {\n        id:8,\n        height: 60\n    },    \n    {\n        id:9,\n        height: 65\n    },    \n    {\n        id:10,\n        height: 70\n    },    \n    {\n        id:11,\n        height: 75\n    },\n    {\n        id:12,\n        height: 80\n    },\n    {\n        id:13,\n        height: 85\n    },\n    {\n        id:14,\n        height: 90\n    }\n];\n\nexport default tyresHeight;","import tyresHeight from '../data/data-tyres-height';\n\nconst leftTyresHeight = document.getElementById(\"lefttyresheight\");\nconst rightTyresHeight = document.getElementById(\"righttyresheight\");\n\nconst tyresHeightMarkup = makeTyresHeightMarkup(tyresHeight);\n\nleftTyresHeight.innerHTML = tyresHeightMarkup;\nrightTyresHeight.innerHTML = tyresHeightMarkup;\n\nfunction makeTyresHeightMarkup(tyresHeight) {\n    const markupString = tyresHeight.map(\n        item => \n        `        <option \n        key=${item.id} \n        value=${item.height}>\n        ${item.height}\n        </option>        `\n    ).join(\"\");\n    return markupString;\n};\n","const tyresDiameter = [\n    {\n        id:1,\n        diameter: 12\n    },\n    {\n        id:2,\n        diameter: 13\n    },    \n    {\n        id:3,\n        diameter: 14\n    },    \n    {\n        id:4,\n        diameter: 15\n    },    \n    {\n        id:5,\n        diameter: 16\n    },    \n    {\n        id:6,\n        diameter: 17\n    },    \n    {\n        id:7,\n        diameter: 18\n    },    \n    {\n        id:8,\n        diameter: 19\n    },    \n    {\n        id:9,\n        diameter: 20\n    },    \n    {\n        id:10,\n        diameter: 21\n    },    \n    {\n        id:11,\n        diameter: 22\n    },\n    {\n        id:12,\n        diameter: 23\n    },\n    {\n        id:13,\n        diameter: 24\n    }\n];\n\nexport default tyresDiameter;","import tyresDiameter from '../data/data-tyres-diameter';\n\nconst leftTyresDiameter = document.getElementById(\"lefttyresdiameter\");\nconst rightTyresDiameter = document.getElementById(\"righttyresdiameter\");\nconst leftDisksDiameter = document.getElementById(\"leftdisksdiameter\");\nconst rightDisksDiameter = document.getElementById(\"rightdisksdiameter\");\n\n\nconst tyresDiameterMarkup = makeTyresDiameterMarkup(tyresDiameter);\n\nleftTyresDiameter.innerHTML = tyresDiameterMarkup;\nrightTyresDiameter.innerHTML = tyresDiameterMarkup;\nleftDisksDiameter.innerHTML = tyresDiameterMarkup;\nrightDisksDiameter.innerHTML = tyresDiameterMarkup;\n\n\nfunction makeTyresDiameterMarkup(tyresDiameter) {\n    const markupString = tyresDiameter.map(\n        item => \n        `        <option \n        key=${item.id} \n        value=${item.diameter}>\n        ${item.diameter}\n        </option>        `\n    ).join(\"\");\n    return markupString;\n};\n","const disksWidth = [\n    {\n        id:1,\n        width: 3.5\n    },\n    {\n        id:2,\n        width: 4\n    },\n    {\n        id:3,\n        width: 4.5\n    },\n    {\n        id:4,\n        width: 5\n    },\n    {\n        id:5,\n        width: 5.5\n    },\n    {\n        id:6,\n        width: 6\n    },\n    {\n        id:7,\n        width: 6.5\n    },\n    {\n        id:8,\n        width: 7\n    },\n    {\n        id:9,\n        width: 7.5\n    },\n    {\n        id:10,\n        width: 8\n    },\n    {\n        id:11,\n        width: 8.5\n    },\n    {\n        id:12,\n        width: 9\n    },\n    {\n        id:13,\n        width: 9.5\n    },\n    {\n        id:14,\n        width: 10\n    },\n    {\n        id:15,\n        width: 10.5\n    },\n    {\n        id:16,\n        width: 11\n    },\n    {\n        id:17,\n        width: 11.5\n    },\n    {\n        id:18,\n        width: 12\n    },\n    {\n        id:19,\n        width: 12.5\n    },    \n    {\n        id:20,\n        width: 13\n    }\n];\n\nexport default disksWidth;","import disksWidth from '../data/data-disks-width';\n\nconst leftDisksWidth = document.getElementById(\"leftdiskswidth\");\nconst rightDisksWidth = document.getElementById(\"rightdiskswidth\");\n\nconst disksWidthMarkup = makeDisksWidthMarkup(disksWidth);\n\nleftDisksWidth.innerHTML = disksWidthMarkup;\nrightDisksWidth.innerHTML = disksWidthMarkup;\n\nfunction makeDisksWidthMarkup(disksWidth) {\n    const markupString = disksWidth.map(\n        item => \n        `<option \n        key=${item.id} \n        value=${item.width}>\n        ${item.width}\n        </option>`\n    ).join(\"\");\n    return markupString;\n};","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","import { nanoid } from 'nanoid'\n\nconst disksEt = [];\n\nfor (let i = 150; i >= -150; i -= 0.5) {\n    disksEt.push({\n        id: nanoid(),\n        et: i,\n    })\n};\n\n// console.log(disksEt);\n\nexport default disksEt;","import disksEt from \"../data/data-disks-et\";\n\nconst leftDisksET = document.getElementById(\"leftdiskset\");\nconst rightDisksET = document.getElementById(\"rightdiskset\");\n\nconst disksEtMarkup = makeDisksEtMarkup(disksEt);\n\nleftDisksET.innerHTML = disksEtMarkup;\nrightDisksET.innerHTML = disksEtMarkup;\n\nfunction makeDisksEtMarkup(disksEt) {\n    const markupString = disksEt.map(\n        item =>\n        `<option \n        key=${item.id} \n        value=${item.et}>\n        ${item.et}\n        </option>`\n    ).join(\"\");\n    return markupString;\n};","const disksSwicthCheckBox = document.getElementById(\"disksswitch\");\n\ndisksSwicthCheckBox.addEventListener(\"input\", switchDisksSelect)\n\nfunction switchDisksSelect(event) {\n    // console.log(event);\n\n    const leftDisksDiameterSelect = document.getElementById(\"leftdisksdiameter\");\n    const rightDisksDiameterSelect = document.getElementById(\"rightdisksdiameter\");\n    const leftDisksWidthSelect = document.getElementById(\"leftdiskswidth\");\n    const rightDisksWidthSelect = document.getElementById(\"rightdiskswidth\");\n    const leftDisksETSelect = document.getElementById(\"leftdiskset\");\n    const rightDisksETSelect = document.getElementById(\"rightdiskset\");\n    const form = document.getElementById(\"tyresform\");\n\n    if (\n        leftDisksDiameterSelect.disabled === true &&\n        rightDisksDiameterSelect.disabled === true &&\n        leftDisksWidthSelect.disabled === true &&\n        rightDisksWidthSelect.disabled === true &&\n        leftDisksETSelect.disabled === true &&\n        rightDisksETSelect.disabled === true\n    ) {\n        leftDisksDiameterSelect.disabled = false;\n        rightDisksDiameterSelect.disabled = false;\n        leftDisksWidthSelect.disabled = false;\n        rightDisksWidthSelect.disabled = false;\n        leftDisksETSelect.disabled = false;\n        rightDisksETSelect.disabled = false;\n        form.classList.remove(\"without__disks\");\n        form.classList.add(\"with__disks\");\n        \n    } else {\n        leftDisksDiameterSelect.disabled = true;\n        rightDisksDiameterSelect.disabled = true;\n        leftDisksWidthSelect.disabled = true;\n        rightDisksWidthSelect.disabled = true;\n        leftDisksETSelect.disabled = true;\n        rightDisksETSelect.disabled = true;  \n        form.classList.remove(\"with__disks\");\n        form.classList.add(\"without__disks\");\n    }\n\n\n}\n\nexport default switchDisksSelect;","const tyresForm = document.getElementById(\"tyresform\");\n\n\ntyresForm.addEventListener('change', onFormChange);\n\nfunction onFormChange(event) {\n    event.preventDefault;\n    // console.log(\"ka-chink!!\");\n    // console.log(event.target);\n\n    \n    // input selectors\n    const leftTyresWidth = document.getElementById(\"lefttyreswidth\").value;\n    const rightTyresWidth = document.getElementById(\"righttyreswidth\").value;\n    const leftTyresHeight = document.getElementById(\"lefttyresheight\").value;\n    const rightTyresHeight = document.getElementById(\"righttyresheight\").value;\n    const leftTyresDiameter = document.getElementById(\"lefttyresdiameter\").value;\n    const rightTyresDiameter = document.getElementById(\"righttyresdiameter\").value;\n    const leftDisksDiameter = document.getElementById(\"leftdisksdiameter\").value;\n    const rightDisksDiameter = document.getElementById(\"rightdisksdiameter\").value;\n    const leftTyresDiameterSelect = document.getElementById(\"lefttyresdiameter\");\n    const rightTyresDiameterSelect = document.getElementById(\"righttyresdiameter\");\n    const leftDisksDiameterSelect = document.getElementById(\"leftdisksdiameter\");\n    const rightDisksDiameterSelect = document.getElementById(\"rightdisksdiameter\");\n    const leftDisksWidth = document.getElementById(\"leftdiskswidth\").value;\n    const rightDisksWidth = document.getElementById(\"rightdiskswidth\").value;\n    const leftDisksET = document.getElementById(\"leftdiskset\").value;\n    const rightDisksET = document.getElementById(\"rightdiskset\").value;\n\n    const disksSwicthCheckBox = document.getElementById(\"disksswitch\");\n\n\n    // table cells selectors\n\n    const oldTyresWidthCell = document.getElementById(\"oldtyreswidth\");\n    const newTYresWidthCell = document.getElementById(\"newtyreswidth\");\n    const oldTyresHeightCell = document.getElementById(\"oldtyresheight\");\n    const newTyresHeightCell = document.getElementById(\"newtyresheight\");\n    const leftTyresDiameterCell = document.getElementById(\"oldtyresdiameter\");\n    const rightTyresDiameterCell = document.getElementById(\"newdtyresiameter\");\n\n    const oldDisksWidthCell = document.getElementById(\"olddiskswidth\");\n    const newDisksWidthCell = document.getElementById(\"newddiskswidth\");\n    const oldWheelsETCell = document.getElementById(\"oldwheelset\");\n    const newWheelsETCell = document.getElementById(\"newdwheelset\");\n\n    // difference selectors\n    const tyresWidthDifferenceCell = document.getElementById(\"tyreswidthdifference\");\n    const tyresHeightDifferenceCell = document.getElementById(\"tyresheightdifference\");\n    const tyresDiameterDifferenceCell = document.getElementById(\"tyresdiameterdifference\");\n\n    const disksDifferenceCell = document.getElementById(\"disksdifference\");\n    const etDifferenceCell = document.getElementById(\"etdifference\");\n\n    const differenceText = document.getElementById(\"difftext\");\n\n    if (event.target === disksSwicthCheckBox) {\n        return;\n    } else if (event.target === leftTyresDiameterSelect) {\n        leftDisksDiameterSelect.value = leftTyresDiameter;\n    } else if (event.target === rightTyresDiameterSelect) {\n        rightDisksDiameterSelect.value = rightTyresDiameter;\n    } else if (event.target === leftDisksDiameterSelect) {\n        leftTyresDiameterSelect.value = leftDisksDiameter\n    } else if (event.target === rightDisksDiameterSelect) {\n        rightTyresDiameterSelect.value = rightDisksDiameter\n    };\n\n    oldTyresWidthCell.innerText = leftTyresWidth;\n    newTYresWidthCell.innerText = rightTyresWidth;\n    oldTyresHeightCell.innerText = Number(leftTyresWidth) * Number(leftTyresHeight) / 100;\n    newTyresHeightCell.innerText = Number(rightTyresWidth) * Number(rightTyresHeight) / 100;\n    leftTyresDiameterCell.innerText = Number((Number(leftTyresWidth) * Number(leftTyresHeight) / 1000) * 2) + (Number(leftTyresDiameter * 2.5));\n    rightTyresDiameterCell.innerText = Number((Number(rightTyresWidth) * Number(rightTyresHeight) / 1000) * 2) + (Number(rightTyresDiameter * 2.5));\n\n    differenceText.innerHTML = \"\";\n    differenceText.insertAdjacentHTML(\"beforeend\", `\n    <p>The comparison result is:</p>`);\n\n    if (leftTyresWidth > rightTyresWidth) {\n        const tyresWidthDifference = Number(leftTyresWidth - rightTyresWidth);\n        tyresWidthDifferenceCell.innerText = `${tyresWidthDifference} mm`;\n        differenceText.insertAdjacentHTML(\"beforeend\", `<span>The new tire is narrower than the old one by ${tyresWidthDifference} mm. </span>`);\n    } else if (leftTyresWidth < rightTyresWidth) {\n        const tyresWidthDifference = Number(rightTyresWidth - leftTyresWidth);\n        tyresWidthDifferenceCell.innerText = `${tyresWidthDifference} mm`;\n        differenceText.insertAdjacentHTML(\"beforeend\", `<span>The new tire is wider than the old one by ${tyresWidthDifference} mm. </span>`);\n    } else if (leftTyresWidth === rightTyresWidth) {\n        tyresWidthDifferenceCell.innerText = 'The same';\n        differenceText.insertAdjacentHTML(\"beforeend\", `<span>Tire width is the same. </span>`);\n    };\n\n    const oldTyresProfile = Number(leftTyresWidth) * Number(leftTyresHeight) / 100;\n    const newTyresProfile = Number(rightTyresWidth) * Number(rightTyresHeight) / 100;\n\n    if (oldTyresProfile > newTyresProfile) {\n        const tyresProfileDifference = Number(oldTyresProfile - newTyresProfile);\n        tyresHeightDifferenceCell.innerText = `${tyresProfileDifference} mm`;\n        differenceText.insertAdjacentHTML(\"beforeend\", `<span>The profile height of the new tire is lower than the old one by ${tyresProfileDifference} mm. </span>`);\n    } else if (newTyresProfile > oldTyresProfile) {\n        const tyresProfileDifference = Number(newTyresProfile - oldTyresProfile);\n        tyresHeightDifferenceCell.innerText = `${tyresProfileDifference} mm`;\n        differenceText.insertAdjacentHTML(\"beforeend\", `<span>The profile height of the new tire is higher than the old one by ${tyresProfileDifference} mm. </span>`);\n    } else if (newTyresProfile === oldTyresProfile) {\n        tyresHeightDifferenceCell.innerText = 'The same';\n        differenceText.insertAdjacentHTML(\"beforeend\", `<span>The profile height is the same. </span>`);\n    }\n\n    const oldWheelHeight = Number((Number(leftTyresWidth) * Number(leftTyresHeight) / 1000) * 2) + (Number(leftTyresDiameter * 2.5));\n    const newWheelHeight = Number((Number(rightTyresWidth) * Number(rightTyresHeight) / 1000) * 2) + (Number(rightTyresDiameter * 2.5));\n\n    if (oldWheelHeight > newWheelHeight) {\n        const wheelHeightDifference = Number(oldWheelHeight - newWheelHeight).toFixed(2);\n        tyresDiameterDifferenceCell.innerText = `${wheelHeightDifference} mm`;\n        differenceText.insertAdjacentHTML(\"beforeend\", `<span>New wheel will be lower than the old one by ${wheelHeightDifference} mm. The clearance of the car will decrease by ${Number(wheelHeightDifference / 2).toFixed(2)} mm. </span>`);\n    } else if (newWheelHeight > oldWheelHeight) {\n        const wheelHeightDifference = Number(newWheelHeight - oldWheelHeight).toFixed(2);\n        tyresDiameterDifferenceCell.innerText = `${wheelHeightDifference} mm`;\n        differenceText.insertAdjacentHTML(\"beforeend\", `<span>New wheel will be higher than the old one by ${wheelHeightDifference} mm. The clearance of the car will increase by ${Number(wheelHeightDifference / 2).toFixed(2)} mm. </span>`);\n    } else if (newWheelHeight === oldWheelHeight) {\n        tyresDiameterDifferenceCell.innerText = 'The same';\n        differenceText.insertAdjacentHTML(\"beforeend\", `<span>Wheel height is the same. The clearance of the car will not change. </span>`);\n    }\n\n    if (disksSwicthCheckBox.checked === true) {\n        oldDisksWidthCell.innerText = Number(leftDisksWidth * 25);\n        newDisksWidthCell.innerText = Number(rightDisksWidth * 25);\n        oldWheelsETCell.innerText = leftDisksET;\n        newWheelsETCell.innerText = rightDisksET;\n\n        if (leftDisksWidth > rightDisksWidth) {\n            disksDifferenceCell.innerText = Number(leftDisksWidth - rightDisksWidth);\n        } else if (rightDisksWidth > leftDisksWidth) {\n            disksDifferenceCell.innerText = Number(rightDisksWidth - leftDisksWidth);\n        } else if (rightDisksWidth === leftDisksWidth) {\n            disksDifferenceCell.innerText = 'The same';\n        };\n\n        if (leftDisksET > rightDisksET) {\n            etDifferenceCell.innerText = Number(leftDisksET - rightDisksET);\n        } else if (rightDisksET > leftDisksET) {\n            etDifferenceCell.innerText = Number(rightDisksET - leftDisksET);\n        } else if (rightDisksET === leftDisksET) {\n            etDifferenceCell.innerText = 'The same';\n        }\n\n        const oldWheelToBodyGap = Number((leftDisksWidth * 2.5) / 2) - (Number(leftDisksET));\n        const newWheelToBodyGap = Number((rightDisksWidth * 2.5) / 2) - (Number(rightDisksET));\n\n        if (oldWheelToBodyGap > newWheelToBodyGap) {\n            const diff = Number(oldWheelToBodyGap - newWheelToBodyGap).toFixed(2);\n            differenceText.insertAdjacentHTML(\"beforeend\", `<span>The wheel is closer to the suspension and body elements by ${diff} mm. </span>`);\n        } else if (oldWheelToBodyGap < newWheelToBodyGap) {\n            const diff = Number(newWheelToBodyGap - oldWheelToBodyGap).toFixed(2);\n            differenceText.insertAdjacentHTML(\"beforeend\", `<span>The wheel is further from the suspension and body elements by ${diff} mm. </span>`);\n        } else {\n            differenceText.insertAdjacentHTML(\"beforeend\", `<span>The gap between wheel and the suspension and body elements is the same. </span>`);\n        }\n\n    } else {\n        oldDisksWidthCell.innerText = \"\";\n        newDisksWidthCell.innerText = \"\";\n        oldWheelsETCell.innerText = \"\";\n        newWheelsETCell.innerText = \"\";\n        disksDifferenceCell.innerText = \"\";\n        etDifferenceCell.innerText = \"\";\n    }\n};"],"names":["$a7f37e2b8a572933$export$2e2bcd8739ae039","id","width","$0a24c03b8046eb05$var$leftTyresWidth","document","getElementById","$0a24c03b8046eb05$var$rightTyresWidth","$0a24c03b8046eb05$var$tyresWidthMarkup","map","item","join","innerHTML","$152c9712110def9f$export$2e2bcd8739ae039","height","$a12aa4612a728a82$var$leftTyresHeight","$a12aa4612a728a82$var$rightTyresHeight","$a12aa4612a728a82$var$tyresHeightMarkup","$786841d140f567db$export$2e2bcd8739ae039","diameter","$88fa9b74f060ce71$var$leftTyresDiameter","$88fa9b74f060ce71$var$rightTyresDiameter","$88fa9b74f060ce71$var$leftDisksDiameter","$88fa9b74f060ce71$var$rightDisksDiameter","$88fa9b74f060ce71$var$tyresDiameterMarkup","$2072b0c1e98741d5$export$2e2bcd8739ae039","$9d315c121c5c0809$var$leftDisksWidth","$9d315c121c5c0809$var$rightDisksWidth","$9d315c121c5c0809$var$disksWidthMarkup","$cf399e049a9c4d34$export$ac4959f4f1338dfc","size","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase","$e636ba7ebdea4e01$var$disksEt","i","push","et","$e636ba7ebdea4e01$export$2e2bcd8739ae039","$3a03501898e4e403$var$leftDisksET","$3a03501898e4e403$var$rightDisksET","$3a03501898e4e403$var$disksEtMarkup","$238bf251b9110785$var$switchDisksSelect","event","leftDisksDiameterSelect","rightDisksDiameterSelect","leftDisksWidthSelect","rightDisksWidthSelect","leftDisksETSelect","rightDisksETSelect","form","disabled","classList","remove","add","addEventListener","preventDefault","leftTyresWidth","value","rightTyresWidth","leftTyresHeight","rightTyresHeight","leftTyresDiameter","rightTyresDiameter","leftDisksDiameter","rightDisksDiameter","leftTyresDiameterSelect","rightTyresDiameterSelect","leftDisksWidth","rightDisksWidth","leftDisksET","rightDisksET","disksSwicthCheckBox","oldTyresWidthCell","newTYresWidthCell","oldTyresHeightCell","newTyresHeightCell","leftTyresDiameterCell","rightTyresDiameterCell","oldDisksWidthCell","newDisksWidthCell","oldWheelsETCell","newWheelsETCell","tyresWidthDifferenceCell","tyresHeightDifferenceCell","tyresDiameterDifferenceCell","disksDifferenceCell","etDifferenceCell","differenceText","target","innerText","Number","insertAdjacentHTML","tyresWidthDifference","oldTyresProfile","newTyresProfile","tyresProfileDifference","oldWheelHeight","newWheelHeight","wheelHeightDifference","toFixed","checked","oldWheelToBodyGap","newWheelToBodyGap","diff"],"version":3,"file":"index.5cc38dab.js.map"}